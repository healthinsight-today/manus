{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useReports}from'../context/ReportsContext';import{useUser}from'../context/UserContext';import PageContainer from'../components/layout/PageContainer';import Card from'../components/common/Card';import Button from'../components/common/Button';import HealthScoreGauge from'../components/charts/HealthScoreGauge';import CategoryDistributionChart from'../components/charts/CategoryDistributionChart';import{useNavigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const{reports,isLoading,error,fetchReports}=useReports();const{user}=useUser();const navigate=useNavigate();const[healthScore,setHealthScore]=useState(0);const[recentReports,setRecentReports]=useState([]);const[abnormalCategoriesData,setAbnormalCategoriesData]=useState([]);// Calculate health score and prepare chart data\nuseEffect(()=>{if(reports.length>0){// Sort reports by date (newest first)\nconst sortedReports=[...reports].sort((a,b)=>{return new Date(b.report_info.report_date).getTime()-new Date(a.report_info.report_date).getTime();});// Get recent reports (up to 3)\nsetRecentReports(sortedReports.slice(0,3));// Calculate health score based on most recent report\nconst latestReport=sortedReports[0];const totalParameters=latestReport.test_sections.reduce((sum,section)=>sum+section.parameters.length,0);const abnormalCount=latestReport.abnormal_parameters.length;const normalCount=totalParameters-abnormalCount;const score=Math.round(normalCount/totalParameters*100);setHealthScore(score);// Prepare abnormal categories data\nconst categoryCounts={};latestReport.abnormal_parameters.forEach(param=>{const category=param.section;categoryCounts[category]=(categoryCounts[category]||0)+1;});const categoryColors={'Lipid Panel':'#3B82F6','Complete Blood Count':'#10B981','Metabolic Panel':'#FBBF24','Liver Function':'#EF4444','Kidney Function':'#8B5CF6','Thyroid Panel':'#EC4899','Electrolytes':'#14B8A6','Vitamins & Minerals':'#F97316'};const chartData=Object.entries(categoryCounts).map(_ref=>{let[name,value]=_ref;return{name,value,color:categoryColors[name]||undefined};});setAbnormalCategoriesData(chartData);}},[reports]);// Handle refresh\nconst handleRefresh=()=>{fetchReports();};// Handle upload new report\nconst handleUploadNew=()=>{navigate('/upload');};// Format date\nconst formatDate=dateString=>{const date=new Date(dateString);return new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'numeric'}).format(date);};return/*#__PURE__*/_jsx(PageContainer,{title:`Welcome${user?', '+user.name:''}`,description:\"Your health insights dashboard\",isLoading:isLoading,error:error,actions:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:handleRefresh,leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"})}),children:\"Refresh\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleUploadNew,leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M12 4v16m8-8H4\"})}),children:\"Upload New Report\"})]}),children:reports.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-12\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-16 h-16 text-neutral-400 mx-auto mb-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold text-neutral-800 dark:text-white mb-2\",children:\"No Reports Found\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-neutral-600 dark:text-neutral-400 mb-6\",children:\"Upload your first blood test report to get started with personalized health insights.\"}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleUploadNew,children:\"Upload Your First Report\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-1\",children:/*#__PURE__*/_jsx(HealthScoreGauge,{score:healthScore,title:\"Overall Health Score\",description:\"Based on your most recent blood test report\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(CategoryDistributionChart,{data:abnormalCategoriesData,title:\"Abnormal Parameters by Category\",description:\"Distribution of abnormal parameters in your most recent report\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-neutral-800 dark:text-white\",children:\"Recent Reports\"}),/*#__PURE__*/_jsx(Button,{variant:\"text\",size:\"sm\",onClick:()=>navigate('/reports'),children:\"View All\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:recentReports.map(report=>/*#__PURE__*/_jsx(\"div\",{className:\"bg-neutral-50 dark:bg-neutral-900 rounded-lg p-4 hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors cursor-pointer\",onClick:()=>navigate(`/reports/${report.id}`),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-neutral-800 dark:text-white\",children:report.report_info.report_type}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-neutral-600 dark:text-neutral-400 mt-1\",children:[formatDate(report.report_info.report_date),\" \\u2022 \",report.report_info.lab_name]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm text-neutral-700 dark:text-neutral-300 mr-2\",children:[report.abnormal_parameters.length,\" abnormal\"]}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 text-neutral-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M9 5l7 7-7 7\"})})]})]})},report.id))})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-1\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-neutral-800 dark:text-white mb-4\",children:\"Quick Actions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[/*#__PURE__*/_jsx(Button,{variant:\"outline\",fullWidth:true,onClick:()=>navigate('/upload'),leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"})}),children:\"Upload New Report\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",fullWidth:true,onClick:()=>navigate('/insights'),leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"})}),children:\"View Insights\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",fullWidth:true,onClick:()=>navigate('/recommendations'),leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"})}),children:\"View Recommendations\"}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",fullWidth:true,onClick:()=>navigate('/history'),leftIcon:/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"})}),children:\"View History\"})]})]})})})]})});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useReports","useUser","PageContainer","Card","Button","HealthScoreGauge","CategoryDistributionChart","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Dashboard","reports","isLoading","error","fetchReports","user","navigate","healthScore","setHealthScore","recentReports","setRecentReports","abnormalCategoriesData","setAbnormalCategoriesData","length","sortedReports","sort","a","b","Date","report_info","report_date","getTime","slice","latestReport","totalParameters","test_sections","reduce","sum","section","parameters","abnormalCount","abnormal_parameters","normalCount","score","Math","round","categoryCounts","forEach","param","category","categoryColors","chartData","Object","entries","map","_ref","name","value","color","undefined","handleRefresh","handleUploadNew","formatDate","dateString","date","Intl","DateTimeFormat","year","month","day","format","title","description","actions","children","variant","onClick","leftIcon","className","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","data","size","report","id","report_type","lab_name","fullWidth"],"sources":["/home/ubuntu/healthinsighttoday-frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useReports } from '../context/ReportsContext';\nimport { useUser } from '../context/UserContext';\nimport PageContainer from '../components/layout/PageContainer';\nimport Card from '../components/common/Card';\nimport Button from '../components/common/Button';\nimport HealthScoreGauge from '../components/charts/HealthScoreGauge';\nimport CategoryDistributionChart from '../components/charts/CategoryDistributionChart';\nimport { useNavigate } from 'react-router-dom';\nimport { Report } from '../types/Report';\n\nconst Dashboard: React.FC = () => {\n  const { reports, isLoading, error, fetchReports } = useReports();\n  const { user } = useUser();\n  const navigate = useNavigate();\n  const [healthScore, setHealthScore] = useState<number>(0);\n  const [recentReports, setRecentReports] = useState<Report[]>([]);\n  const [abnormalCategoriesData, setAbnormalCategoriesData] = useState<Array<{name: string, value: number, color?: string}>>([]);\n\n  // Calculate health score and prepare chart data\n  useEffect(() => {\n    if (reports.length > 0) {\n      // Sort reports by date (newest first)\n      const sortedReports = [...reports].sort((a, b) => {\n        return new Date(b.report_info.report_date).getTime() - new Date(a.report_info.report_date).getTime();\n      });\n      \n      // Get recent reports (up to 3)\n      setRecentReports(sortedReports.slice(0, 3));\n      \n      // Calculate health score based on most recent report\n      const latestReport = sortedReports[0];\n      const totalParameters = latestReport.test_sections.reduce(\n        (sum, section) => sum + section.parameters.length, \n        0\n      );\n      const abnormalCount = latestReport.abnormal_parameters.length;\n      const normalCount = totalParameters - abnormalCount;\n      const score = Math.round((normalCount / totalParameters) * 100);\n      setHealthScore(score);\n      \n      // Prepare abnormal categories data\n      const categoryCounts: Record<string, number> = {};\n      \n      latestReport.abnormal_parameters.forEach(param => {\n        const category = param.section;\n        categoryCounts[category] = (categoryCounts[category] || 0) + 1;\n      });\n      \n      const categoryColors: Record<string, string> = {\n        'Lipid Panel': '#3B82F6',\n        'Complete Blood Count': '#10B981',\n        'Metabolic Panel': '#FBBF24',\n        'Liver Function': '#EF4444',\n        'Kidney Function': '#8B5CF6',\n        'Thyroid Panel': '#EC4899',\n        'Electrolytes': '#14B8A6',\n        'Vitamins & Minerals': '#F97316',\n      };\n      \n      const chartData = Object.entries(categoryCounts).map(([name, value]) => ({\n        name,\n        value,\n        color: categoryColors[name] || undefined,\n      }));\n      \n      setAbnormalCategoriesData(chartData);\n    }\n  }, [reports]);\n\n  // Handle refresh\n  const handleRefresh = () => {\n    fetchReports();\n  };\n\n  // Handle upload new report\n  const handleUploadNew = () => {\n    navigate('/upload');\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    }).format(date);\n  };\n\n  return (\n    <PageContainer\n      title={`Welcome${user ? ', ' + user.name : ''}`}\n      description=\"Your health insights dashboard\"\n      isLoading={isLoading}\n      error={error}\n      actions={\n        <>\n          <Button\n            variant=\"outline\"\n            onClick={handleRefresh}\n            leftIcon={\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n              </svg>\n            }\n          >\n            Refresh\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleUploadNew}\n            leftIcon={\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\"></path>\n              </svg>\n            }\n          >\n            Upload New Report\n          </Button>\n        </>\n      }\n    >\n      {reports.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <svg className=\"w-16 h-16 text-neutral-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n          </svg>\n          <h3 className=\"text-xl font-semibold text-neutral-800 dark:text-white mb-2\">No Reports Found</h3>\n          <p className=\"text-neutral-600 dark:text-neutral-400 mb-6\">\n            Upload your first blood test report to get started with personalized health insights.\n          </p>\n          <Button\n            variant=\"primary\"\n            onClick={handleUploadNew}\n          >\n            Upload Your First Report\n          </Button>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Health Score */}\n          <div className=\"lg:col-span-1\">\n            <HealthScoreGauge \n              score={healthScore}\n              title=\"Overall Health Score\"\n              description=\"Based on your most recent blood test report\"\n            />\n          </div>\n          \n          {/* Abnormal Categories */}\n          <div className=\"lg:col-span-2\">\n            <CategoryDistributionChart \n              data={abnormalCategoriesData}\n              title=\"Abnormal Parameters by Category\"\n              description=\"Distribution of abnormal parameters in your most recent report\"\n            />\n          </div>\n          \n          {/* Recent Reports */}\n          <div className=\"lg:col-span-2\">\n            <Card>\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h3 className=\"text-lg font-semibold text-neutral-800 dark:text-white\">\n                    Recent Reports\n                  </h3>\n                  <Button\n                    variant=\"text\"\n                    size=\"sm\"\n                    onClick={() => navigate('/reports')}\n                  >\n                    View All\n                  </Button>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  {recentReports.map((report) => (\n                    <div \n                      key={report.id}\n                      className=\"bg-neutral-50 dark:bg-neutral-900 rounded-lg p-4 hover:bg-neutral-100 dark:hover:bg-neutral-800 transition-colors cursor-pointer\"\n                      onClick={() => navigate(`/reports/${report.id}`)}\n                    >\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <h4 className=\"font-medium text-neutral-800 dark:text-white\">\n                            {report.report_info.report_type}\n                          </h4>\n                          <p className=\"text-sm text-neutral-600 dark:text-neutral-400 mt-1\">\n                            {formatDate(report.report_info.report_date)} • {report.report_info.lab_name}\n                          </p>\n                        </div>\n                        <div className=\"flex items-center\">\n                          <span className=\"text-sm text-neutral-700 dark:text-neutral-300 mr-2\">\n                            {report.abnormal_parameters.length} abnormal\n                          </span>\n                          <svg className=\"w-5 h-5 text-neutral-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\"></path>\n                          </svg>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </Card>\n          </div>\n          \n          {/* Quick Actions */}\n          <div className=\"lg:col-span-1\">\n            <Card>\n              <div className=\"p-6\">\n                <h3 className=\"text-lg font-semibold text-neutral-800 dark:text-white mb-4\">\n                  Quick Actions\n                </h3>\n                \n                <div className=\"space-y-3\">\n                  <Button\n                    variant=\"outline\"\n                    fullWidth\n                    onClick={() => navigate('/upload')}\n                    leftIcon={\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path>\n                      </svg>\n                    }\n                  >\n                    Upload New Report\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    fullWidth\n                    onClick={() => navigate('/insights')}\n                    leftIcon={\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                    }\n                  >\n                    View Insights\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    fullWidth\n                    onClick={() => navigate('/recommendations')}\n                    leftIcon={\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"></path>\n                      </svg>\n                    }\n                  >\n                    View Recommendations\n                  </Button>\n                  \n                  <Button\n                    variant=\"outline\"\n                    fullWidth\n                    onClick={() => navigate('/history')}\n                    leftIcon={\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                      </svg>\n                    }\n                  >\n                    View History\n                  </Button>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,2BAA2B,CACtD,OAASC,OAAO,KAAQ,wBAAwB,CAChD,MAAO,CAAAC,aAAa,KAAM,oCAAoC,CAC9D,MAAO,CAAAC,IAAI,KAAM,2BAA2B,CAC5C,MAAO,CAAAC,MAAM,KAAM,6BAA6B,CAChD,MAAO,CAAAC,gBAAgB,KAAM,uCAAuC,CACpE,MAAO,CAAAC,yBAAyB,KAAM,gDAAgD,CACtF,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG/C,KAAM,CAAAC,SAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,KAAK,CAAEC,YAAa,CAAC,CAAGlB,UAAU,CAAC,CAAC,CAChE,KAAM,CAAEmB,IAAK,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAC1B,KAAM,CAAAmB,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGxB,QAAQ,CAAS,CAAC,CAAC,CACzD,KAAM,CAACyB,aAAa,CAAEC,gBAAgB,CAAC,CAAG1B,QAAQ,CAAW,EAAE,CAAC,CAChE,KAAM,CAAC2B,sBAAsB,CAAEC,yBAAyB,CAAC,CAAG5B,QAAQ,CAAuD,EAAE,CAAC,CAE9H;AACAC,SAAS,CAAC,IAAM,CACd,GAAIgB,OAAO,CAACY,MAAM,CAAG,CAAC,CAAE,CACtB;AACA,KAAM,CAAAC,aAAa,CAAG,CAAC,GAAGb,OAAO,CAAC,CAACc,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAChD,MAAO,IAAI,CAAAC,IAAI,CAACD,CAAC,CAACE,WAAW,CAACC,WAAW,CAAC,CAACC,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAH,IAAI,CAACF,CAAC,CAACG,WAAW,CAACC,WAAW,CAAC,CAACC,OAAO,CAAC,CAAC,CACtG,CAAC,CAAC,CAEF;AACAX,gBAAgB,CAACI,aAAa,CAACQ,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAE3C;AACA,KAAM,CAAAC,YAAY,CAAGT,aAAa,CAAC,CAAC,CAAC,CACrC,KAAM,CAAAU,eAAe,CAAGD,YAAY,CAACE,aAAa,CAACC,MAAM,CACvD,CAACC,GAAG,CAAEC,OAAO,GAAKD,GAAG,CAAGC,OAAO,CAACC,UAAU,CAAChB,MAAM,CACjD,CACF,CAAC,CACD,KAAM,CAAAiB,aAAa,CAAGP,YAAY,CAACQ,mBAAmB,CAAClB,MAAM,CAC7D,KAAM,CAAAmB,WAAW,CAAGR,eAAe,CAAGM,aAAa,CACnD,KAAM,CAAAG,KAAK,CAAGC,IAAI,CAACC,KAAK,CAAEH,WAAW,CAAGR,eAAe,CAAI,GAAG,CAAC,CAC/DhB,cAAc,CAACyB,KAAK,CAAC,CAErB;AACA,KAAM,CAAAG,cAAsC,CAAG,CAAC,CAAC,CAEjDb,YAAY,CAACQ,mBAAmB,CAACM,OAAO,CAACC,KAAK,EAAI,CAChD,KAAM,CAAAC,QAAQ,CAAGD,KAAK,CAACV,OAAO,CAC9BQ,cAAc,CAACG,QAAQ,CAAC,CAAG,CAACH,cAAc,CAACG,QAAQ,CAAC,EAAI,CAAC,EAAI,CAAC,CAChE,CAAC,CAAC,CAEF,KAAM,CAAAC,cAAsC,CAAG,CAC7C,aAAa,CAAE,SAAS,CACxB,sBAAsB,CAAE,SAAS,CACjC,iBAAiB,CAAE,SAAS,CAC5B,gBAAgB,CAAE,SAAS,CAC3B,iBAAiB,CAAE,SAAS,CAC5B,eAAe,CAAE,SAAS,CAC1B,cAAc,CAAE,SAAS,CACzB,qBAAqB,CAAE,SACzB,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGC,MAAM,CAACC,OAAO,CAACP,cAAc,CAAC,CAACQ,GAAG,CAACC,IAAA,MAAC,CAACC,IAAI,CAAEC,KAAK,CAAC,CAAAF,IAAA,OAAM,CACvEC,IAAI,CACJC,KAAK,CACLC,KAAK,CAAER,cAAc,CAACM,IAAI,CAAC,EAAIG,SACjC,CAAC,EAAC,CAAC,CAEHrC,yBAAyB,CAAC6B,SAAS,CAAC,CACtC,CACF,CAAC,CAAE,CAACxC,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAAiD,aAAa,CAAGA,CAAA,GAAM,CAC1B9C,YAAY,CAAC,CAAC,CAChB,CAAC,CAED;AACA,KAAM,CAAA+C,eAAe,CAAGA,CAAA,GAAM,CAC5B7C,QAAQ,CAAC,SAAS,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAA8C,UAAU,CAAIC,UAAkB,EAAK,CACzC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAApC,IAAI,CAACmC,UAAU,CAAC,CACjC,MAAO,IAAI,CAAAE,IAAI,CAACC,cAAc,CAAC,OAAO,CAAE,CACtCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,SACP,CAAC,CAAC,CAACC,MAAM,CAACN,IAAI,CAAC,CACjB,CAAC,CAED,mBACE3D,IAAA,CAACP,aAAa,EACZyE,KAAK,CAAE,UAAUxD,IAAI,CAAG,IAAI,CAAGA,IAAI,CAACyC,IAAI,CAAG,EAAE,EAAG,CAChDgB,WAAW,CAAC,gCAAgC,CAC5C5D,SAAS,CAAEA,SAAU,CACrBC,KAAK,CAAEA,KAAM,CACb4D,OAAO,cACLhE,KAAA,CAAAF,SAAA,EAAAmE,QAAA,eACErE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEhB,aAAc,CACvBiB,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,6GAA6G,CAAO,CAAC,CACvL,CACN,CAAAZ,QAAA,CACF,SAED,CAAQ,CAAC,cACTrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEf,eAAgB,CACzBgB,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,gBAAgB,CAAO,CAAC,CAC1F,CACN,CAAAZ,QAAA,CACF,mBAED,CAAQ,CAAC,EACT,CACH,CAAAA,QAAA,CAEA/D,OAAO,CAACY,MAAM,GAAK,CAAC,cACnBd,KAAA,QAAKqE,SAAS,CAAC,mBAAmB,CAAAJ,QAAA,eAChCrE,IAAA,QAAKyE,SAAS,CAAC,yCAAyC,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/IrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,sHAAsH,CAAO,CAAC,CAChM,CAAC,cACNjF,IAAA,OAAIyE,SAAS,CAAC,6DAA6D,CAAAJ,QAAA,CAAC,kBAAgB,CAAI,CAAC,cACjGrE,IAAA,MAAGyE,SAAS,CAAC,6CAA6C,CAAAJ,QAAA,CAAC,uFAE3D,CAAG,CAAC,cACJrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBC,OAAO,CAAEf,eAAgB,CAAAa,QAAA,CAC1B,0BAED,CAAQ,CAAC,EACN,CAAC,cAENjE,KAAA,QAAKqE,SAAS,CAAC,uCAAuC,CAAAJ,QAAA,eAEpDrE,IAAA,QAAKyE,SAAS,CAAC,eAAe,CAAAJ,QAAA,cAC5BrE,IAAA,CAACJ,gBAAgB,EACf0C,KAAK,CAAE1B,WAAY,CACnBsD,KAAK,CAAC,sBAAsB,CAC5BC,WAAW,CAAC,6CAA6C,CAC1D,CAAC,CACC,CAAC,cAGNnE,IAAA,QAAKyE,SAAS,CAAC,eAAe,CAAAJ,QAAA,cAC5BrE,IAAA,CAACH,yBAAyB,EACxBqF,IAAI,CAAElE,sBAAuB,CAC7BkD,KAAK,CAAC,iCAAiC,CACvCC,WAAW,CAAC,gEAAgE,CAC7E,CAAC,CACC,CAAC,cAGNnE,IAAA,QAAKyE,SAAS,CAAC,eAAe,CAAAJ,QAAA,cAC5BrE,IAAA,CAACN,IAAI,EAAA2E,QAAA,cACHjE,KAAA,QAAKqE,SAAS,CAAC,KAAK,CAAAJ,QAAA,eAClBjE,KAAA,QAAKqE,SAAS,CAAC,wCAAwC,CAAAJ,QAAA,eACrDrE,IAAA,OAAIyE,SAAS,CAAC,wDAAwD,CAAAJ,QAAA,CAAC,gBAEvE,CAAI,CAAC,cACLrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,MAAM,CACda,IAAI,CAAC,IAAI,CACTZ,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,UAAU,CAAE,CAAA0D,QAAA,CACrC,UAED,CAAQ,CAAC,EACN,CAAC,cAENrE,IAAA,QAAKyE,SAAS,CAAC,WAAW,CAAAJ,QAAA,CACvBvD,aAAa,CAACmC,GAAG,CAAEmC,MAAM,eACxBpF,IAAA,QAEEyE,SAAS,CAAC,kIAAkI,CAC5IF,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,YAAYyE,MAAM,CAACC,EAAE,EAAE,CAAE,CAAAhB,QAAA,cAEjDjE,KAAA,QAAKqE,SAAS,CAAC,kCAAkC,CAAAJ,QAAA,eAC/CjE,KAAA,QAAAiE,QAAA,eACErE,IAAA,OAAIyE,SAAS,CAAC,8CAA8C,CAAAJ,QAAA,CACzDe,MAAM,CAAC5D,WAAW,CAAC8D,WAAW,CAC7B,CAAC,cACLlF,KAAA,MAAGqE,SAAS,CAAC,qDAAqD,CAAAJ,QAAA,EAC/DZ,UAAU,CAAC2B,MAAM,CAAC5D,WAAW,CAACC,WAAW,CAAC,CAAC,UAAG,CAAC2D,MAAM,CAAC5D,WAAW,CAAC+D,QAAQ,EAC1E,CAAC,EACD,CAAC,cACNnF,KAAA,QAAKqE,SAAS,CAAC,mBAAmB,CAAAJ,QAAA,eAChCjE,KAAA,SAAMqE,SAAS,CAAC,qDAAqD,CAAAJ,QAAA,EAClEe,MAAM,CAAChD,mBAAmB,CAAClB,MAAM,CAAC,WACrC,EAAM,CAAC,cACPlB,IAAA,QAAKyE,SAAS,CAAC,0BAA0B,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAChIrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,cAAc,CAAO,CAAC,CACxF,CAAC,EACH,CAAC,EACH,CAAC,EArBDG,MAAM,CAACC,EAsBT,CACN,CAAC,CACC,CAAC,EACH,CAAC,CACF,CAAC,CACJ,CAAC,cAGNrF,IAAA,QAAKyE,SAAS,CAAC,eAAe,CAAAJ,QAAA,cAC5BrE,IAAA,CAACN,IAAI,EAAA2E,QAAA,cACHjE,KAAA,QAAKqE,SAAS,CAAC,KAAK,CAAAJ,QAAA,eAClBrE,IAAA,OAAIyE,SAAS,CAAC,6DAA6D,CAAAJ,QAAA,CAAC,eAE5E,CAAI,CAAC,cAELjE,KAAA,QAAKqE,SAAS,CAAC,WAAW,CAAAJ,QAAA,eACxBrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBkB,SAAS,MACTjB,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,SAAS,CAAE,CACnC6D,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,uFAAuF,CAAO,CAAC,CACjK,CACN,CAAAZ,QAAA,CACF,mBAED,CAAQ,CAAC,cAETrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBkB,SAAS,MACTjB,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,WAAW,CAAE,CACrC6D,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,2DAA2D,CAAO,CAAC,CACrI,CACN,CAAAZ,QAAA,CACF,eAED,CAAQ,CAAC,cAETrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBkB,SAAS,MACTjB,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,kBAAkB,CAAE,CAC5C6D,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,iIAAiI,CAAO,CAAC,CAC3M,CACN,CAAAZ,QAAA,CACF,sBAED,CAAQ,CAAC,cAETrE,IAAA,CAACL,MAAM,EACL2E,OAAO,CAAC,SAAS,CACjBkB,SAAS,MACTjB,OAAO,CAAEA,CAAA,GAAM5D,QAAQ,CAAC,UAAU,CAAE,CACpC6D,QAAQ,cACNxE,IAAA,QAAKyE,SAAS,CAAC,SAAS,CAACC,IAAI,CAAC,MAAM,CAACC,MAAM,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,4BAA4B,CAAAR,QAAA,cAC/GrE,IAAA,SAAM8E,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACC,CAAC,CAAC,6CAA6C,CAAO,CAAC,CACvH,CACN,CAAAZ,QAAA,CACF,cAED,CAAQ,CAAC,EACN,CAAC,EACH,CAAC,CACF,CAAC,CACJ,CAAC,EACH,CACN,CACY,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAhE,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}